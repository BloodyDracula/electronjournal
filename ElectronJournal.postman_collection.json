{
  "info": {
    "_postman_id": "e5f8d5b0-5b5a-4b5b-8b5a-5b5a4b5b8b5a",
    "name": "Электронный Журнал API",
    "description": "Коллекция для тестирования API электронного журнала",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Авторизация",
      "item": [
        {
          "name": "Вход в систему",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"login\": \"admin\",\n    \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Авторизация пользователя в системе"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "if (response.token) {",
                  "    pm.collectionVariables.set(\"token\", response.token);",
                  "    console.log(\"Токен авторизации сохранен\");",
                  "}",
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит токен\", function() {",
                  "    pm.expect(response).to.have.property(\"token\");",
                  "});",
                  "pm.test(\"Ответ содержит информацию о пользователе\", function() {",
                  "    pm.expect(response).to.have.property(\"user\");",
                  "    pm.expect(response.user).to.have.property(\"id\");",
                  "    pm.expect(response.user).to.have.property(\"login\");",
                  "    pm.expect(response.user).to.have.property(\"role\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Получить текущего пользователя",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            },
            "description": "Получение информации о текущем пользователе"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит информацию о пользователе\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"id\");",
                  "    pm.expect(response).to.have.property(\"login\");",
                  "    pm.expect(response).to.have.property(\"role\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Пользователи",
      "item": [
        {
          "name": "Получить всех пользователей",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Получение списка всех пользователей (только для админа)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит массив пользователей\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Получить пользователей по роли",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/role/student",
              "host": ["{{base_url}}"],
              "path": ["users", "role", "student"]
            },
            "description": "Получение списка пользователей по роли (student, teacher, admin)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит массив пользователей\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Создать пользователя",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"login\": \"newuser\",\n    \"password\": \"password123\",\n    \"firstName\": \"Иван\",\n    \"lastName\": \"Иванов\",\n    \"middleName\": \"Иванович\",\n    \"role\": \"student\",\n    \"groupId\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Создание нового пользователя (только для админа)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Ответ содержит данные созданного пользователя\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"id\");",
                  "    pm.expect(response).to.have.property(\"login\");",
                  "    pm.expect(response).to.have.property(\"role\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Обновить пользователя",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"Петр\",\n    \"lastName\": \"Петров\",\n    \"middleName\": \"Петрович\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            },
            "description": "Обновление данных пользователя (админ может обновлять любого, пользователь - только себя)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит обновленные данные пользователя\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"id\");",
                  "    pm.expect(response.firstName).to.equal(\"Петр\");",
                  "    pm.expect(response.lastName).to.equal(\"Петров\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Удалить пользователя",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            },
            "description": "Удаление пользователя (только для админа)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Группы",
      "item": [
        {
          "name": "Получить все группы",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/groups",
              "host": ["{{base_url}}"],
              "path": ["groups"]
            },
            "description": "Получение списка всех групп (админ и преподаватель могут видеть все, студент - только свою)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит массив групп\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Получить группу по ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/groups/1",
              "host": ["{{base_url}}"],
              "path": ["groups", "1"]
            },
            "description": "Получение информации о конкретной группе"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит данные группы\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"id\");",
                  "    pm.expect(response).to.have.property(\"name\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Создать группу",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"ИС-31\",\n    \"year\": 2023\n}"
            },
            "url": {
              "raw": "{{base_url}}/groups",
              "host": ["{{base_url}}"],
              "path": ["groups"]
            },
            "description": "Создание новой группы (только для админа)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Ответ содержит данные созданной группы\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"id\");",
                  "    pm.expect(response).to.have.property(\"name\");",
                  "    pm.expect(response.name).to.equal(\"ИС-31\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Обновить группу",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"ИС-32\",\n    \"year\": 2023\n}"
            },
            "url": {
              "raw": "{{base_url}}/groups/1",
              "host": ["{{base_url}}"],
              "path": ["groups", "1"]
            },
            "description": "Обновление данных группы (только для админа)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит обновленные данные группы\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"id\");",
                  "    pm.expect(response.name).to.equal(\"ИС-32\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Удалить группу",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/groups/1",
              "host": ["{{base_url}}"],
              "path": ["groups", "1"]
            },
            "description": "Удаление группы (только для админа)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Предметы",
      "item": [
        {
          "name": "Получить все предметы",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/subjects",
              "host": ["{{base_url}}"],
              "path": ["subjects"]
            },
            "description": "Получение списка всех предметов"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит массив предметов\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Получить предмет по ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/subjects/1",
              "host": ["{{base_url}}"],
              "path": ["subjects", "1"]
            },
            "description": "Получение информации о конкретном предмете"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит данные предмета\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"id\");",
                  "    pm.expect(response).to.have.property(\"name\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Создать предмет",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Математика\",\n    \"description\": \"Высшая математика\",\n    \"teacherIds\": [1]\n}"
            },
            "url": {
              "raw": "{{base_url}}/subjects",
              "host": ["{{base_url}}"],
              "path": ["subjects"]
            },
            "description": "Создание нового предмета (только для админа)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Ответ содержит данные созданного предмета\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"id\");",
                  "    pm.expect(response).to.have.property(\"name\");",
                  "    pm.expect(response.name).to.equal(\"Математика\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Обновить предмет",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Алгебра\",\n    \"description\": \"Алгебра и начала анализа\",\n    \"teacherIds\": [1, 2]\n}"
            },
            "url": {
              "raw": "{{base_url}}/subjects/1",
              "host": ["{{base_url}}"],
              "path": ["subjects", "1"]
            },
            "description": "Обновление данных предмета (только для админа)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит обновленные данные предмета\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"id\");",
                  "    pm.expect(response.name).to.equal(\"Алгебра\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Удалить предмет",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/subjects/1",
              "host": ["{{base_url}}"],
              "path": ["subjects", "1"]
            },
            "description": "Удаление предмета (только для админа)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Оценки",
      "item": [
        {
          "name": "Получить все оценки",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/grades",
              "host": ["{{base_url}}"],
              "path": ["grades"]
            },
            "description": "Получение списка всех оценок (только для админа и преподавателей)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит массив оценок\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Получить оценки студента",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/grades/student/1",
              "host": ["{{base_url}}"],
              "path": ["grades", "student", "1"]
            },
            "description": "Получение оценок конкретного студента"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит массив оценок\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Получить оценки по предмету",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/grades/subject/1",
              "host": ["{{base_url}}"],
              "path": ["grades", "subject", "1"]
            },
            "description": "Получение оценок по конкретному предмету"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит массив оценок\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Создать оценку",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"studentId\": 1,\n    \"subjectId\": 1,\n    \"value\": 5,\n    \"date\": \"2023-09-15\",\n    \"comment\": \"Отличная работа\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/grades",
              "host": ["{{base_url}}"],
              "path": ["grades"]
            },
            "description": "Создание новой оценки (только для админа и преподавателей)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Ответ содержит данные созданной оценки\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"id\");",
                  "    pm.expect(response).to.have.property(\"value\");",
                  "    pm.expect(response.value).to.equal(5);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Обновить оценку",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"value\": 4,\n    \"comment\": \"Хорошая работа\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/grades/1",
              "host": ["{{base_url}}"],
              "path": ["grades", "1"]
            },
            "description": "Обновление оценки (только для админа и преподавателя, который выставил оценку)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Ответ содержит обновленные данные оценки\", function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"id\");",
                  "    pm.expect(response.value).to.equal(4);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Удалить оценку",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/grades/1",
              "host": ["{{base_url}}"],
              "path": ["grades", "1"]
            },
            "description": "Удаление оценки (только для админа и преподавателя, который выставил оценку)"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Статус ответа 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}